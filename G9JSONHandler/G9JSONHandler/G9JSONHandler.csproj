<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net40;net45;netstandard2.0;netstandard2.1</TargetFrameworks>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<Version>3.0.3.2</Version>
		<Authors>Iman Kari</Authors>
		<Company>G9Studio</Company>
		<Product>G9 JSON Handler</Product>
		<Description>A pretty small .NET library has been developed for working with JSON. This library provides many helpful attributes for members like Comment, Encryption, CustomName, Ordering, Ignoring, CustomParser, etc. On the other hand, with the custom parser structure, you can define your desired parsing process for specific types, or with a preferred config, you can customize the parsing process, which leads to more flexibility.</Description>
		<Copyright>G9Studio - 2022</Copyright>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
		<PackageProjectUrl>http://www.G9TM.com</PackageProjectUrl>
		<RepositoryUrl>https://github.com/ImanKari/G9JSONHandler</RepositoryUrl>
		<RepositoryType>GitHub</RepositoryType>
		<PackageTags>json Parser JsonParser Writer JsonWriter JSON Handler Management JsonHandler</PackageTags>
		<NeutralLanguage>en</NeutralLanguage>
		<PackageIcon>G9-Icon.png</PackageIcon>
		<PackageIconUrl />
		<AssemblyVersion>3.0.3.2</AssemblyVersion>
		<FileVersion>3.0.3.2</FileVersion>
		<PackageReleaseNotes>-- Custom parser for object item is fixed.</PackageReleaseNotes>
		<EmbedAllSources>True</EmbedAllSources>
		<!--<SymbolPackageFormat>snupkg</SymbolPackageFormat>-->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>true</IncludeSymbols>
		<IncludeSource>true</IncludeSource>
		<Deterministic>true</Deterministic>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<ProduceReferenceAssembly>true</ProduceReferenceAssembly>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
		<UserSecretsId>7f06d5d0-68fd-4e1c-8bf5-3f97652e61af</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\..\README.md" Pack="true" PackagePath="" />
	</ItemGroup>

	<ItemGroup>
		<None Include="G9-Icon.png">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
		<None Include="LICENSE.md">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Common\" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="G9AssemblyManagement" Version="1.4.5.25" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net45'">
	  <PackageReference Include="Microsoft.CSharp">
	    <Version>4.7.0</Version>
	  </PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
	  <PackageReference Include="Microsoft.CSharp">
	    <Version>4.7.0</Version>
	  </PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
	  <PackageReference Include="Microsoft.CSharp">
	    <Version>4.7.0</Version>
	  </PackageReference>
	</ItemGroup>

	<Target Name="CopyPackage" AfterTargets="Pack">
		<Copy SourceFiles="$(OutputPath)$(PackageId).$([System.Text.RegularExpressions.Regex]::Replace(&quot;$(PackageVersion)&quot;, &quot;^(.+?)(\.0+)$&quot;, &quot;$1&quot;)).nupkg" DestinationFolder="Z:\LocalNugetPackages\" Condition="Exists('Z:\LocalNugetPackages\')" />
		<Copy SourceFiles="$(OutputPath)$(PackageId).$([System.Text.RegularExpressions.Regex]::Replace(&quot;$(PackageVersion)&quot;, &quot;^(.+?)(\.0+)$&quot;, &quot;$1&quot;)).symbols.nupkg" DestinationFolder="Z:\LocalNugetPackages\" Condition="Exists('Z:\LocalNugetPackages\')" />
	</Target>

</Project>