<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net35;net40;net45;netstandard2.0;netstandard2.1</TargetFrameworks>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<Version>3.0.2.0</Version>
		<Authors>Iman Kari</Authors>
		<Company>G9Studio</Company>
		<Product>G9 JSON Handler</Product>
		<Description>A pretty small .NET library has been developed for working with JSON. This library provides many helpful attributes for members like Comment, Encryption, CustomName, Ordering, Ignoring, CustomParser, etc. On the other hand, with the custom parser structure, you can define your desired parsing process for specific types, or with a preferred config, you can customize the parsing process, which leads to more flexibility.</Description>
		<Copyright>G9Studio - 2022</Copyright>
		<PackageLicenseFile>LICENSE.md</PackageLicenseFile>
		<PackageProjectUrl>http://www.G9TM.com</PackageProjectUrl>
		<RepositoryUrl>https://github.com/ImanKari/G9JSONHandler</RepositoryUrl>
		<RepositoryType>GitHub</RepositoryType>
		<PackageTags>json Parser JsonParser Writer JsonWriter JSON Handler Management JsonHandler</PackageTags>
		<NeutralLanguage>en</NeutralLanguage>
		<PackageIcon>G9-Icon.png</PackageIcon>
		<PackageIconUrl />
		<AssemblyVersion>3.0.2.0</AssemblyVersion>
		<PackageReleaseNotes>-- Added directly read and write from a file.
-- Added a feature for adding a custom comment in the custom parser.
-- Added order attribute.
-- Added access modifiers for searching the members of an object in configs.
-- Added method 'GetTotalCustomParser' for accessing custom parser types.
-- Renamed attributes.
-- Redesign structure
-- Added assembly update.
-- Completed tests.</PackageReleaseNotes>
		<FileVersion>3.0.2.0</FileVersion>

		<EmbedAllSources>True</EmbedAllSources>
		<!--<SymbolPackageFormat>snupkg</SymbolPackageFormat>-->
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<IncludeSymbols>true</IncludeSymbols>
		<IncludeSource>true</IncludeSource>
		<Deterministic>true</Deterministic>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<ProduceReferenceAssembly>true</ProduceReferenceAssembly>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
		<UserSecretsId>7f06d5d0-68fd-4e1c-8bf5-3f97652e61af</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\..\README.md" Pack="true" PackagePath="" />
	</ItemGroup>

	<ItemGroup>
		<None Include="G9-Icon.png">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
		<None Include="LICENSE.md">
			<Pack>True</Pack>
			<PackagePath></PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Common\" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="G9AssemblyManagement" Version="1.4.5" />
	</ItemGroup>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent">
	  <Exec Command="Set &quot;NugetLocalTargetPath=I:\LocalNugetPackages\&quot;&#xD;&#xA;if exist &quot;%25NugetLocalTargetPath%25&quot; (&#xD;&#xA;  xcopy &quot;bin\$(ConfigurationName)\*.nupkg&quot; &quot;%25NugetLocalTargetPath%25&quot; /C /Y&#xD;&#xA;) else (&#xD;&#xA;  echo 'Post-build event command line' : warning -9: 'Nuget target path not exist!'&#xD;&#xA;)" />
	</Target>

</Project>